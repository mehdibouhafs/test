<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:batch="http://www.springframework.org/schema/batch"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<context:component-scan base-package="configurations" />
	<context:component-scan base-package="listeners" />




	<!--<bean id="dataSource"
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test3?autoReconnect=true&amp;useSSL=false" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>-->

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@LAME_L01:1521:ORCL"/>
		<property name="username" value="MOA_CERTIF14"/>
		<property name="password" value="V9"/>
	</bean>

	<jdbc:initialize-database data-source="dataSource" enabled="false">
		<jdbc:script location="org/springframework/batch/core/schema-drop-oracle10g.sql" />
		<jdbc:script location="org/springframework/batch/core/schema-oracle10g.sql" />
		<!-- <jdbc:script location="classpath:oracle10g/initial-query.sql" /> -->
	</jdbc:initialize-database>


	<bean id="BatchService" class="batch.business.BatchServiceImpl"/>


	<bean id="ObjectDao" class="batch.dao.ObjectDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="batchJobDao" class="batch.dao.BatchJobJdbc">
	<property name="dataSource" ref="dataSource" />
</bean>

	<batch:job-repository id="jobRepository" data-source="dataSource" transaction-manager="transactionManager"/>

	<bean id="transactionManager"
		  class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobRepositoryy"
		  class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="oracle" />
	</bean>

	<bean id="jobLauncher"
		  class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepositoryy" />
	</bean>

	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<!--<property name="recordSeparatorPolicy" ref="recordSeperatorPolicy "/>-->
		<property name="resource" value="file:#{jobParameters['input.file.name']}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="delimiter" value="#{readerGenerique.getSeparator()}"/>
                        <property name="names" value="#{readerGenerique.getColumns()}"/>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="firstBe" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="linesToSkip" value="#{readerGenerique.getLineToSkip()}"/>
		<property name="strict" value="false" />
	</bean>

	<bean id="FileVerificationSkipper" class="batch.policy.FileVerificationSkipper"/>

	<bean id="readerGenerique" class="batch.model.ReaderGenerique" scope="singleton"/>


	<bean id="generator" class="batch.util.Generator" lazy-init="true" />

	<bean id="processor" class="batch.processor.ObjectItemProcessor"/>

	<bean id="firstBe" class="#{readerGenerique.getClassGenerate()}" lazy-init="true" scope="prototype"></bean>


	<bean id="recordSeperatorPolicy " class="batch.policy.BlankLineRecordSeparatorPolicy"/>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref ="dataSource"/>
	</bean>

	<bean id="listener" class="batch.listeners.JobCompletionNotificationListener">
		<constructor-arg ref="jdbcTemplate"/>
	</bean>

	<batch:job id="importUserJob">
		<batch:step id="step1">
			<tasklet>
				<chunk
				reader="cvsFileItemReader"
				processor="processor"
				writer="cvsFileItemWriter"
				skip-policy="FileVerificationSkipper"
				commit-interval="1">
				</chunk>
			</tasklet>
		</batch:step>

		<batch:listeners>
			<batch:listener ref = "listener"/>
		</batch:listeners>

	</batch:job>

	<bean id="cvsFileItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="#{readerGenerique.cData}"/>
		<property name="itemPreparedStatementSetter">
			<bean class="batch.processor.FieldSetItemPreparedStatementSetter"/>
		</property>
	</bean>

</beans>
